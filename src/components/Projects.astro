---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import turncateString from '../utils/turncateString';
import Icon from './ui/icons/Icon.astro';

// Fetch projects data
const allProjects: CollectionEntry<'projects'>[] =
  await getCollection('projects');

const featuredProjects = allProjects.filter((project) => project.data.featured);
---

<section class="mt-10 min-h-full w-full md:mt-20">
  <div
    class="mb-6 flex flex-col justify-between gap-2 md:flex-row md:items-center md:gap-0"
  >
    <h2 class="text-2xl font-bold">
      Recent <span class="text-lblue">Projects</span>
    </h2>
    <a
      class="hover:text-lblue-500 flex items-center gap-x-1 text-lblue hover:underline"
      href="/projects"
      >View all Projects
      <Icon name="arrowRight" />
    </a>
  </div>

  <ul class="flex flex-col gap-y-10">
    {
      featuredProjects.map((project) => (
        <li class="grid cursor-pointer items-center overflow-hidden rounded-sm bg-project shadow-projectCard transition-transform duration-300 hover:translate-y-1 hover:shadow-lg md:grid-cols-[15rem_1fr] md:gap-4 md:p-4">
          <figure class="aspect-w-3 aspect-h-2">
            <a href={`/projects/${project.id}`}>
              <Image
                class="mx-auto hidden min-h-[13rem] rounded-md md:block"
                width={400}
                height={300}
                src={project.data.image.src}
                alt={project.data.image.alt}
              />
              <Image
                class="mx-auto block min-h-[13rem] rounded-t-md md:hidden"
                width={500}
                height={300}
                src={project.data.image.src}
                alt={project.data.image.alt}
              />
            </a>
          </figure>
          <article class="p-3 md:p-0">
            <div class="flex flex-1 flex-col items-center gap-x-5 gap-y-5 md:flex-row">
              <a href={`/projects/${project.id}`}>
                <h3 class="w-full text-center font-headfont text-xl font-bold text-gray-300 transition duration-300 ease-in-out hover:text-lblue">
                  {project.data.title}
                </h3>
              </a>

              {/* Tech stack */}

              {project.data.technology &&
                project.data.technology.length > 0 && (
                  <ul class="mt-5 flex flex-1 flex-wrap justify-center gap-2">
                    {project.data.technology.map((tech: string) => (
                      <li class="border-lblue/30 bg-lblue/10 group-hover:bg-lblue/20 rounded-full border px-3 py-1 text-xs font-medium text-lblue transition-colors duration-200">
                        {tech}
                      </li>
                    ))}
                  </ul>
                )}
            </div>
            <p class="mx-1 mt-3 hidden text-gray-400 md:block">
              {project.data.description}
            </p>

            <p class="mx-1 mt-3 text-gray-400 md:hidden">
              {turncateString(project.data.shortDesc, 150)}
            </p>
          </article>
        </li>
      ))
    }
  </ul>
</section>
