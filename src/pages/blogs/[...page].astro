---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import Pagination from '../../components/Pagination.astro';
import type { CollectionEntry } from 'astro:content';
import type { Page } from '../../types/dataTypes';
import { SITE, ISPARTOF } from '../../data/constant';
import Newsletter from '../../components/sections/Newsletter.astro';
import turncateString from '../../utils/turncateString';

interface Props {
  page: Page;
}

export async function getStaticPaths({ paginate }: any) {
  const PROJECT_PER_PAGE: number = 6;
  const posts: CollectionEntry<'blogs'>[] = (await getCollection('blogs')).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );
  return paginate(posts || [], {
    pageSize: PROJECT_PER_PAGE,
  });
}

const { page } = Astro.props;
const title: string = `Articles | ${SITE.title}`;
const description: string = 'Explore my latest articles and insights.';

const articles = page.data;
console.log(page.data[0].collection);
const totalPages = Math.ceil(page.total / 6);
---

<MainLayout
  title={title}
  structuredData={{
    '@context': 'https://schema.org',
    '@type': 'WebPage',
    '@id': 'https://melnerdz.com/blogs',
    url: 'https://melnerdz.com/blogs',
    name: 'Blog | Melnerdz website',
    description: description,
    isPartOf: ISPARTOF,
    inLanguage: 'en-US',
  }}
  meta={description}
>
  <section class="">
    <h1
      class="text-center font-headfont text-4xl font-bold text-white md:text-5xl"
    >
      Welcome to My Blog
    </h1>

    <p class="mt-4 text-center text-lg text-gray-300 md:block">
      Read my latest insights and technical articles. Click on a title to learn
      more.
    </p>

    <ul class="mt-12 grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
      {
        articles.map((article) => (
          <li class="cursor-pointer list-none overflow-hidden rounded-sm bg-project shadow-projectCard transition-transform duration-300 hover:translate-y-1 hover:shadow-lg">
            <a href={`/blogs/${article.id}`} class="block">
              <figure class="">
                <Image
                  class="h-56 w-full object-cover"
                  src={article.data.image.src}
                  alt={article.data.image.alt}
                />
              </figure>
              <article class="flex flex-col gap-y-2 p-2">
                <h3 class="text-xl font-bold text-gray-200">
                  <a href={`/blogs/${article.id}`}>{article.data.title}</a>
                </h3>
                <p class="text-gray-400">
                  {turncateString(article.data.description, 150)}
                </p>
              </article>
            </a>
          </li>
        ))
      }
    </ul>

    {
      totalPages > 1 && (
        <Pagination
          currentPage={page.currentPage}
          totalPages={totalPages}
          disablePrevious={!page.url.prev}
          disableNext={!page.url.next}
          next={page.url.next}
          prev={page.url.prev}
        />
      )
    }

    <Newsletter />
  </section>
</MainLayout>
